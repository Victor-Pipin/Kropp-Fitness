
  @font-face {
    font-family: "Heebo";
    src: url(./fonts/Heebo-Light.woff2) format("woff2");
    font-weight: 300;
    font-style: normal;
    font-display: swap;
  }
  
  @font-face {
    font-family: "Heebo";
    src: url(./fonts/Heebo-Bold.woff2) format("woff2");
    font-weight: 700;
    font-style: normal;
    font-display: swap;
  }
  
  @font-face {
    font-family: "Yantramanav";
    src: url(./fonts/Yantramanav-Bold.woff2) format("woff2");
    font-weight: 700;
    font-style: normal;
    font-display: swap;
  }
  
      /* # # # # # # # # # # # # #   Н   О   Р   М   А   Л   И   З   А   Ц   И   Я   # # # # # # # # # # # # #  */


/* Нормализация блочной модели */

*,
*::before,
*::after {
  box-sizing: border-box;
}


/* Убираем внутренние отступы слева тегам списков, у которых есть атрибут class */

:where(ul, ol):where([class]) {
  padding-left: 0;
}


/* Убираем внешние отступы body и двум другим тегам, у которых есть атрибут class */

body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}


/* Убираем внешние отступы вертикали нужным тегам, у которых есть атрибут class */

:where(h1, h2, h3, h4, h5, h6, p, ul, ol, dl):where([class]) {
  margin-block: 0;
}


:where(dd[class]) {
  margin-left: 0;
}


:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}


/* Убираем стандартный маркер маркированному списку, у которого есть атрибут class */

:where(ul[class]) {
  list-style: none;
}


/* Обнуляем вертикальные внешние отступы параграфа,
объявляем локальную переменную для внешнего отступа вниз,
чтобы избежать взаимодействие с более сложным селектором */

p {
  --paragraphMarginBottom: 24px;

  margin-block: 0;
}


/* Внешний отступ вниз для параграфа без атрибута class,
который расположен не последним среди своих соседних элементов */

p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}


/* Упрощаем работу с изображениями */

img {
  display: block;
  max-width: 100%;
}


/* Наследуем свойства шрифт для полей ввода */

input,
textarea,
select,
button {
  font: inherit;
}


html {
 /* Пригодится в большинстве ситуаций (когда, например, нужно будет "прижать" футер к низу сайта) */

  height: 100%;

  scroll-behavior: smooth;   /* Плавный скролл */
}


body {
  min-height: 100%;   /* Пригодится в большинстве ситуаций (когда, например, нужно будет "прижать" футер к низу сайта) */
  line-height: 1.5;  /* Унифицированный интерлиньяж */
}


/* Приводим к единому цвету svg-элементы */

svg *[fill] {
  fill: currentColor;
}
svg *[stroke] {
  stroke: currentColor;
}


/* Чиним баг задержки смены цвета при взаимодействии с svg-элементами */

svg * {
  transition-property: fill, stroke;
}


/* Удаляем все анимации и переходы для людей, которые предпочитают их не использовать */

@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}


      /* # # # # # # # # # # # # #   О Б Щ И Е   С Т И Л И   Д Л Я   П Р О Е К Т А   # # # # # # # # # # # # #  */


/* Обращаюсь по псевдоклассу :root к корню страницы (элемент <html>) для объявления глобальных переменных проекта */

:root {
  /* Создаём 5 переменных для 5 основных цветов страницы */

  --color-dark: #000000;
  --color-dark-alternate: #131619;
  --color-light: #ffffff;
  --color-dark-gray: #404040;
  --color-light-gray: #C4C4C4;

  --border-radius: 30px;
  --border: 1px solid var(--color-light);

  --font-family-base: "Heebo", sans-serif;
  --font-family-accent: "Yantramanav", sans-serif;

  --input-height: 54px;

  --container-width: 1300px;
  --container-padding-x: 15px;

  --transition-duration: 0.2s;

  --header-height: 90px;
}


body {
  font-family: var(--font-family-base);
  font-weight: 300;
  font-size: 16px;
  line-height: 1.75;
  color: var(--color-light-gray);
  background-color: var(--color-dark);
}


a,
button,
input,
textarea,
svg * {
  transition-duration: var(--transition-duration);
}


a {
  color: var(--color-light);
}

/* Меняю цвет ссылки при наведении */

a:hover {
  color: var(--color-light-gray);
}

/* Утилитарный класс 'container' с горизонтальными отступами и центрированием */

.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}


/* Утилитарный класс, чтобы визуально скрыть содержимое, но оставить для скринридеров,
для страховки для каждого свойства добавляю !important, чтобы перебить другие, возможные настройки */

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}


h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: bold;
  text-transform: uppercase;
}

/* Утилитарный класс для повторяющихся на странице заголовков с одинаковыми стилями */
.title-medium {
  font-size: 40px;
  line-height: 1.3;
  color: var(--color-light);
}

/* Элемент с утилитарным класс 'backdrop-title' будет отображаться поверх псевдоэлемнта ::after  применяемого к нему */
.backdrop-title {
  position: relative; /* Без позиционирования свойство 'z-index' не работает, так же необходимо для позиционирования псевдоэлемента */
  z-index: 2; /* Элемент к которому будут добавляться псевдоэлементы будет распологаться поверх их */
}

/* Стили для псевдоэлемента - плюс, слева от заголовков <h3> секции .motivation и т.д.*/
.backdrop-title::before {
  content: '';
  display: block; /* Делает элемент блочным, предоставляет возможность задавать размеры, без этого элеменет не отобразится */
  position: absolute; /* Позиционируется относительно родителя .backdrop-title */
  right: calc(100% + 8px); /* 100% от правого края родителя, + 8px(по макету) выход за рамки родителя, псевдоэлемент окажется слева */
  width: 26px;
  aspect-ratio: 1;
  background: url('./icons/plus.svg') center/contain no-repeat;
}

/* Стили для псевдоэлемента - текст, под заголовками <h3> секции .motivation и т.д. */
.backdrop-title::after {
  content: attr(data-title); /* Значение для псевдоэлемента из data-атрибута расположенном в html-элементе(h3 .motivation) */
  position: absolute; /* Относительно родителя .backdrop-title */
  z-index: -1; /* Чтобы текст псевдоэлемента распологался за(под) текстом основного заголовка */
  top: -0.45em;
  left: -0.6em;
  font-family: var(--font-family-accent);
  font-size: 2.8em; /* Размер шрифта по макету 112px / размер шрифта родителя 40px = адаптивный размер потомка 2.8em */
  color: transparent;
  /* Обводка текста первая строка для - WebKit и Blink браузеров, вторая - для браузеров с поддержкой стандартного свойства */
  -webkit-text-stroke: 0.3px var(--color-light-gray); /* Обводка текста, 1 значение - толщина обводки, 2 значение - цвет обводки */
  text-stroke: 1px var(--color-light-gray); /* Для браузеров с поддержкой стандартного свойства, когда станет стандартом */
}


.button {
  /* для того, чтобы к кнопке применилось свойство высоты height. */
  display: inline-flex;
  align-items: center;
  height: 38px;
  /* горизонатальный падинг кнопки слева и справа. */
  padding-inline: 26px;
  font-size: 12px;
  font-weight: 700;
  /* указываем как формат кофициента */
  line-height: 2;
  letter-spacing: 1.2px;
  text-transform: uppercase;
  /* Чтобы текст в кнопке не перескавивал на новую строку при адаптиве. */
  white-space: nowrap;
  background-color: var(--color-light);
  border: none;
  border-radius: var(--border-radius);
}

/* Меняю цвет кнопки при наведении */

.button:hover {
  background-color: var(--color-light-gray);
}


      /* # # # # # # # # # # # # #   С Т И Л И   Д Л Я   Х Е Д Е Р А   С Т Р А Н И Ц Ы   # # # # # # # # # # # # #  */


.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  /* Чтобы при уменьшении элементы не слипались */
  column-gap: 20px;
  min-height: var(--header-height);
  padding-inline: 32px;
  background-color: var(--color-dark-alternate);
}

.header-logo {
  /* Чтобы картинка не искажалась при масшатбировани. */
  flex-shrink: 0;
}

.header-menu-list {
  display: flex;
  /* При уменьшении экрана элементы списка смещаются друг под друга. */
  flex-wrap: wrap;
  column-gap: 50px;
}

.header-menu-link {
  /* Чтобы применилась высота в 90px к (inline) элементу, добавляю: (inline-flex) */
  display: inline-flex;
  align-items: center;
  column-gap: 7px;
  height: var(--header-height);
  text-decoration: none;
  text-transform: uppercase;
  font-weight: 700;
  font-size: 12px;
  letter-spacing: 1.2px;
}

.header-menu-link.is-current::after {
  content: "";
  width: 5px;
  /* Когда высота и ширина одинаковые, при адаптиве, чтобы гарантированно правильно изменялись
  пропорции вместо свойства height использую aspect-ratio: 1;
  height: 5px; */
  aspect-ratio: 1;
  /* Наследование цвета от оригинального элемента */
  background-color: currentColor;
  border-radius: 50%;
}

.header-actions {
  display: flex;
  /* Боковое расстояние между элементами */
  column-gap: 40px;
}

.header-burger-button {
  display: inline-flex;
  flex-direction: column;
  justify-content: center;
  row-gap: 4px;
  width: 40px;
  /* Когда высота и ширина одинаковые, при адаптиве, чтобы гарантированно правильно изменялись
  пропорции вместо свойства height использую aspect-ratio: 1;
  height: 40px; */
  aspect-ratio: 1;
  padding-left: 8px;
  color: var(--color-light);
  background-color: transparent;
  border: var(--border);
  border-radius: 50%;
}

.header-burger-button:hover {
  color: var(--color-light-gray);
  border-color: currentColor;
}

.header-burger-button-line {
  width: 6px;
  height: 1px;
  background-color: currentColor;
  box-shadow: 16px 0 0 currentColor;
}


      /* # # # # # # # # # # # # #   С Т И Л И   Д Л Я   B A N N E R   С Е К Ц И И   # # # # # # # # # # # # #  */


.banner {
  display: flex;
  flex-direction: column;
  justify-content: end;
  min-height: calc(100vh - var(--header-height));   /* От 100% высоты экрана вычетается высота хедера, остаточную высоту занимает секция banner */
  padding: 36px 70px;
  color: var(--color-light);
  background-color: var(--color-dark-alternate);
}

.banner-body {
  text-transform: uppercase;
}

.banner-info {
  /* Добавляю родителю display: flex, для того чтобы отобразился псевдоэлемент .banner-info::before */
  display: flex;
  align-items: end;

  /* Три значения для размера текста: минимальное(16px) - ниже которого не опустится, чтобы текст оставался читаемым
  рекомендуемое(1.56vw) - по формуле (30 (размер по макету(px)) / 1920 (ширина макета(px)) * 100 (ширины экрана(%)) = 1.56 (адаптивный(vw))),
  максимальное(30px) - чтобы не превышал размер по макету в 30px */
  font-size: clamp(16px, 1.56vw, 30px);
  line-height: 1.27;
  font-weight: 700;
}

.banner-info::before {
  content: '';
  /* Три значения для размера псевдоэлемента: минимальное(60px) - ниже которого не опустится, чтобы стрелка оставалась выше текста
  рекомендуемое(10.1vw) - по формуле (194 (размер по макету(px)) / 1920 (ширина макета(px)) * 100 (ширины экрана(%)) = 1.56 (адаптивный(vw))),
  максимальное(194px) - чтобы не превышал размер по макету в 194px */
  width: clamp(60px, 10.1vw, 194px);
  aspect-ratio: 1;  /* Если ширина и высота равны ипользую свойство aspect-ratio для идеально ровного соответсвия сторон 1 к 1*/
  margin: 0px 20px;
  /* Короткая запись для нижеследующих 4 свойств:
  background: url('./icons/bold-arrow-down-right.svg') center/contain no-repeat; */
  background-image: url('./icons/bold-arrow-down-right.svg');
  background-position: center;
  background-size: contain;
  background-repeat: no-repeat;
}

.banner-title {
  /* Делаю адаптивный размер. Размер шрифта по макету 360px,
  делю на ширину макета 1920px и умножаю на 100, получаю 18,75 */
  font-size: min(18.75vw, 360px);
  line-height: 1;
}

.banner-pagination-list {
  display: flex;
  justify-content: center;
}

.banner-pagination-item {
  display: flex;
}

.banner-pagination-button {
  aspect-ratio: 1;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  padding: 7px;
  background-color: transparent;
  border: none;
}

.banner-pagination-button::after {
content: '';
width: 10px;
aspect-ratio: 1;
border: var(--border);
border-radius: 50%;
}

.banner-pagination-button.is-current::after {
  background-color: var(--color-light);
}

.banner-pagination-button:not(.is-current):hover::after {
  border-color: var(--color-light-gray);
  transition-duration: var(--transition-duration);
}


      /* # # # # # # # # # # # # #   С Т И Л И   Д Л Я   M O T I V A T I O N   С Е К Ц И И   # # # # # # # # # # # # #  */


      /* При помощи псевдокласса :nth-child() со значением even, 
         обращаюсь ко всем чётным элементам(<li class="motivation-item">) списка(<ul>) */
      .motivation-item:nth-child(even) {
        background-color: var(--color-dark-alternate);
      }

      /* Реверс(row-reverse) расположения элементов, внутри чётных(even) пунктов(<li>) списка(<ul>) */
      .motivation-item:nth-child(even) .motivation-card {
        flex-direction: row-reverse;
      }

      /* Обёртка-контейнер с контентом для карточки(<li>) */
      .motivation-card {
        display: flex;   /* Элементы становятся по оси-x(горизонталь) */
        justify-content: start;   /* Потребуется в дальнейшем */
        align-items: center;   /* Центрирую элементы по вертикали */
        column-gap: clamp(30px, 10.42vw, 200px);   /* Адаптивное растояние между элементами по горизонтали */
      }

      .motivation-card-image {
        /* Вертикальный отступ с отрицательным значением позволяет изображению перекрывать соседний элемент, без позиционирования */
        margin-block: -60px;
      }

      .motivation-card-body {
        padding-left: 35px;
      }

      .motivation-card-title {

      }


      /* # # # # # # # # # # # # #   А   Д   А   П   Т   И   В  # # # # # # # # # # # # #  */


@media (max-width: 1024px) {

      /* # # # # # # # # # # # # #   А Д А П Т И В   Д Л Я   Х Е Д Е Р А   С Т Р А Н И Ц Ы   # # # # # # # # # # # # #  */

  .header {
    /* При уменьшении экрана позволяет элементам занимать место под соседним элементом
  т.о. позволяет продолжить уменьшение экрана и отображение элемента. */
    flex-wrap: wrap;
    row-gap: 10px;
    padding-top: 20px;
    padding-inline: 15px;
  }

  .header-menu {
    /* Передвигаю навигацию в конец родителя на место кнопок, кнопки сдвигаются на место навигации. */
    order: 1;
    /* Чтобы сразу при адаптиве, элемент занимал следующую строчку */
    flex-basis: 100%;
  }

  .header-menu-link {
    height: 50px;
  }

        /* # # # # # # # # # # # # #   А Д А П Т И В   Д Л Я   B A N N E R   С Е К Ц И И   # # # # # # # # # # # # #  */

  .banner {
    padding-inline: 15px;
    row-gap: 10px;
  }
}


@media (max-width: 767px) {

      /* # # # # # # # # # # # # #   А Д А П Т И В   Д Л Я   Х Е Д Е Р А   С Т Р А Н И Ц Ы   # # # # # # # # # # # # #  */

  .button {
    padding-inline: 18px;
  }
  .header {
    padding-top: 10px;
  }

  .header-menu-link {
    height: 32px;
  }

  .header-menu-list {
    column-gap: 24px;
  }

  .header-actions {
    column-gap: 15px;
  }

  .header-burger-button {
    padding-left: 4px;
  }

        /* # # # # # # # # # # # # #   А Д А П Т И В   Д Л Я   B A N N E R   С Е К Ц И И   # # # # # # # # # # # # #  */

  .banner-info {
    margin-bottom: 5px;
  }

  .banner-info::before {
    margin-right: 10px;
    margin-left: 10px;
  }
}